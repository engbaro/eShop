@model eShop.Models.Customer

<ul class="nav justify-content-center">
    <li>
        <h2><a href="#" id="login" data-toggle="modal" data-target="#login-form">Login</a> | <a href="#" id="register" data-toggle="modal" data-target="#register-form">Register</a></h2>
    </li>
</ul>

<div class="modal fade" id="register-form" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Register</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
               @using (Ajax.BeginForm(new AjaxOptions { HttpMethod = "post", OnSuccess = "loginSuccess", OnFailure = "registerFailure", OnComplete = "onComplete" }))
               {
                    @Html.AntiForgeryToken()


                    <div class="form-horizontal">
                        Please fill the information below to register as a customer.
                        <div class="alert alert-danger error hide"></div>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">

                            @Html.LabelFor(model => model.CustName, "Full Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 input-group">
                                <span class="input-group-addon "><i class="fa fa-user" aria-hidden="true"></i></span>
                                @Html.EditorFor(model => model.CustName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CustName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">

                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 input-group">
                                <span class="input-group-addon "><i class="fa fa-lock" aria-hidden="true"></i></span>
                                @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">

                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 input-group">
                                <span class="input-group-addon "><i class="fa fa-lock" aria-hidden="true"></i></span>
                                @Html.PasswordFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10  input-group">
                                <span class="input-group-addon "><i class="fa fa-map-marker" aria-hidden="true"></i></span>
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10  input-group">
                                <span class="input-group-addon "><i class="fa fa-map-marker" aria-hidden="true"></i></span>
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Postcode, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10  input-group">
                                <span class="input-group-addon "><i class="fa fa-map-marker" aria-hidden="true"></i></span>
                                @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Postcode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10  input-group">
                                <span class="input-group-addon "><i class="fa fa-map-marker" aria-hidden="true"></i></span>
                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10  input-group">
                                <span class="input-group-addon "><i class="fa fa-phone" aria-hidden="true"></i></span>
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="submit" class="btn btn-primary">Create</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
              
            </div>
      -</div>
    </div>
</div>



<!-- ------------------Login----------------------------------- -->
<div class="modal fade" id="login-form" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Login</h5>
               
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

               
            </div>

            <div class="alert alert-danger error hide"></div>
@using (Ajax.BeginForm("Login", new AjaxOptions { HttpMethod = "post", OnSuccess = "loginSuccess", OnFailure = "loginFailure" }))
{
            <div class="modal-body">
              
                    @Html.AntiForgeryToken()


                    <div class="form-horizontal">
                        <h4>Login to your account</h4>
                       
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10  input-group">
                                <span class="input-group-addon "><i class="fa fa-phone" aria-hidden="true"></i></span>
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">

                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 input-group">
                                <span class="input-group-addon "><i class="fa fa-lock" aria-hidden="true"></i></span>
                                @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                       <!--<div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Login" class="btn btn-pr" />
                            </div>
                        </div>--> 
                    </div>
                

            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary">Login</button>
            </div>
          }
        </div>
    </div>
</div>
<div class="alert alert-warning" role="alert">Login if you have an account with us otherwise you have to register.</div>
